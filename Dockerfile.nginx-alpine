# Step 1: Build NGINX with --with-stream module
FROM alpine:latest AS builder

# Install build dependencies
RUN apk add --no-cache build-base pcre-dev zlib-dev openssl-dev

# Download and extract NGINX source code
ENV NGINX_VERSION=1.27.3
RUN wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \
    && tar -zxvf nginx-${NGINX_VERSION}.tar.gz \
    && cd nginx-${NGINX_VERSION} \
    && ./configure --prefix=/etc/nginx \
    --conf-path=/etc/nginx/nginx.conf \
    --user=nginx \
    --group=nginx \
    --with-compat \
    --with-threads \
    --with-http_addition_module \
    --with-http_auth_request_module \
    --with-http_dav_module \
    --with-http_flv_module \
    --with-http_gunzip_module \
    --with-http_gzip_static_module \
    --with-http_mp4_module \
    --with-http_random_index_module \
    --with-http_realip_module \
    --with-http_secure_link_module \
    --with-http_slice_module \
    --with-http_ssl_module \
    --with-http_stub_status_module \
    --with-http_sub_module \
    --with-http_v2_module \
    --with-mail \
    --with-mail_ssl_module \
    --with-stream \
    --with-stream_realip_module \
    --with-stream_ssl_module \
    --with-stream_ssl_preread_module \
    && make \
    && make install


# Step 2: Create a clean Alpine image with only NGINX binary
FROM alpine:latest
LABEL maintainer="Izet Molla <izetmolla@gmail.com>"
# Install necessary runtime dependencies
RUN apk add --no-cache pcre zlib openssl logrotate

# Create nginx user and group
RUN addgroup -S nginx && adduser -S nginx -G nginx
# Ensure correct ownership and permissions
RUN mkdir -p /var/cache/nginx /run/nginx /var/log/nginx \
    && chown -R nginx:nginx /var/cache/nginx /run/nginx /var/log/nginx

# Copy the NGINX binary and configuration from the builder stage
COPY --from=builder /etc/nginx /etc/nginx
RUN ln -s /etc/nginx/sbin/nginx /usr/local/bin/nginx

# Expose ports (adjust as needed)
EXPOSE 80 443
# Set the entrypoint to the startup script
ENTRYPOINT ["nginx", "-g", "daemon off;"]